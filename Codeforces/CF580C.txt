// https://codeforces.com/problemset/problem/580/C
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.Set;

public class Solution11 {
	static long c = 0;
	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		String[] sa1 = br.readLine().split(" ");
		int n = Integer.parseInt(sa1[0]);
		int m = Integer.parseInt(sa1[1]);
		ArrayList<Integer> al[] = new ArrayList[n + 1];
		String[] sa2 = br.readLine().split(" ");
		int[] cats = new int[n+1];
		for(int i=1;i<=n;i++)
			cats[i] = Integer.parseInt(sa2[i-1]);
		for(int i=0;i<al.length;i++)
			al[i] = new ArrayList<Integer>();
		
		String[] sa ;
		
		for(int i=0;i<n-1;i++)
		{
			sa = br.readLine().split(" ");
			int a = Integer.parseInt(sa[0]);
			int b = Integer.parseInt(sa[1]);
			al[a].add(b);
			al[b].add(a);
		}
		al[0].add(1);
		al[1].add(0);
		dfs(al,cats,m,0,1,0);

		System.out.println(c);
	}
	
	static void dfs(ArrayList<Integer> al[],int[] cats,int m,int catCount,int n,int par)
	{
		if(catCount == m && cats[n]==1)
		{
			return;
		}
		if(al[n].size()==1 && al[n].get(0)==par)
		{	
			c++;
			return;
		}
		for(int i=0;i<al[n].size();i++)
		{
			if(al[n].get(i)!=par)
			{		
				int x = 0;
				if(cats[n]==1)
					x = catCount+1;
				dfs(al,cats,m,x,al[n].get(i),n);
			}
		}
	}

}
