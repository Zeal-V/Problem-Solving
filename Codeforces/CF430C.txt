
//  https://codeforces.com/problemset/problem/430/C
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;

public class Solution11 {
	static long c = 0;

	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		int n = Integer.parseInt(br.readLine());

		ArrayList<Integer> al[] = new ArrayList[n + 1];
		ArrayList<Integer> root = new ArrayList<>();
		for (int i = 0; i < al.length; i++) {
			al[i] = new ArrayList<Integer>();
		}

		String[] sa;
		al[0].add(1);
		al[1].add(0);
		for (int i = 0; i < n - 1; i++) {
			sa = br.readLine().split(" ");
			int a = Integer.parseInt(sa[0]);
			int b = Integer.parseInt(sa[1]);
			al[a].add(b);
			al[b].add(a);
		}

		String[] sa1 = br.readLine().split(" ");
		String[] sa2 = br.readLine().split(" ");
		ArrayList<Integer> l1 = new ArrayList<Integer>();
		l1.add(0);
		ArrayList<Integer> l2 = new ArrayList<Integer>();
		l2.add(0);
		for (int i = 0; i < n; i++)
			l1.add(Integer.parseInt(sa1[i]));
		for (int i = 0; i < n; i++)
			l2.add(Integer.parseInt(sa2[i]));

		ArrayList<Integer> flips = new ArrayList<Integer>();
		dfs(al, l1, l2, flips, 1, 0, 0, 0, 0);
		System.out.println(flips.size());
		for (int i : flips)
			System.out.println(i);
	}

	static void dfs(ArrayList<Integer> al[], ArrayList<Integer> l1, ArrayList<Integer> l2, ArrayList<Integer> flips,
			int node, int par, int gp, int pC, int gC) {
		int count = 0;

		if (l1.get(node) != l2.get(node)) {
			if (gC % 2 == 0) {
				flips.add(node);
				count++;
			}
		} else if (gC % 2 != 0) {
			flips.add(node);
			count++;
		}

		for (int i = 0; i < al[node].size(); i++) {
			if (al[node].get(i) != par)
				dfs(al, l1, l2, flips, al[node].get(i), node, par, gC + count, pC);
		}

	}

}
